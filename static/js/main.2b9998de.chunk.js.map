{"version":3,"sources":["MyComponent/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","count","setCount","useEffect","localStorage","setItem","className","getItem","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIe,SAASA,IACpB,MAAyBC,mBAAS,GAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAECC,qBAAU,WACRC,aAAaC,QAAQ,QAAQJ,KAC7B,CAACA,IAYJ,OACI,qBAAKK,UAAU,QAAf,SACI,sBAAKA,UAAU,UAAf,UAEI,6BAAKL,IACL,wDAA2BG,aAAaG,QAAQ,YAChD,sBAAKD,UAAU,OAAf,UACA,wBAAQE,QAlBL,WACXN,EAASD,EAAQ,IAiBT,eACA,wBAAQO,QAfL,WAEPN,EADDD,EAAQ,EACEA,EAAQ,EAER,IAWL,uBClBDQ,MARf,WACE,OACE,8BACE,cAACV,EAAD,OCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2b9998de.chunk.js","sourcesContent":["\r\nimport './All.css'\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Counter() {\r\n    const [count,setCount] = useState(0); \r\n\r\n     useEffect(() =>{\r\n       localStorage.setItem(\"value\",count)\r\n     },[count])     \r\n    const setNum = () =>{\r\n        setCount(count + 1)\r\n    \r\n    }\r\n    const delNum = () =>{\r\n        if(count > 0){\r\n            setCount(count - 1)\r\n        }else{\r\n            setCount(0)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"mainp\">\r\n            <div className=\"centerp\">\r\n                \r\n                <h2>{count}</h2>\r\n                <h3>localStorage value is:{localStorage.getItem(\"value\")}</h3>\r\n                <div className=\"btnp\">\r\n                <button onClick={setNum}>+</button>\r\n                <button onClick={delNum}>-</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css'\nimport Counter from './MyComponent/Counter'\n\nfunction App() {\n  return (\n    <div>\n      <Counter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}